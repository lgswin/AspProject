// <auto-generated />
using System;
using BPMeasurement.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BPMeasurement.Migrations
{
    [DbContext(typeof(BPDbContext))]
    partial class BPDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BPMeasurement.Entities.BloodPressure", b =>
                {
                    b.Property<int>("BloodPressureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BloodPressureId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Diastolic")
                        .HasColumnType("int");

                    b.Property<string>("PositionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Systolic")
                        .HasColumnType("int");

                    b.HasKey("BloodPressureId");

                    b.HasIndex("PositionId");

                    b.ToTable("BloodPressures");

                    b.HasData(
                        new
                        {
                            BloodPressureId = 1,
                            DateTime = new DateTime(2000, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 80,
                            PositionId = "1",
                            Systolic = 120
                        },
                        new
                        {
                            BloodPressureId = 2,
                            DateTime = new DateTime(2000, 1, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 79,
                            PositionId = "1",
                            Systolic = 122
                        },
                        new
                        {
                            BloodPressureId = 3,
                            DateTime = new DateTime(2000, 12, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 85,
                            PositionId = "1",
                            Systolic = 130
                        },
                        new
                        {
                            BloodPressureId = 4,
                            DateTime = new DateTime(2000, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Diastolic = 85,
                            PositionId = "1",
                            Systolic = 230
                        });
                });

            modelBuilder.Entity("BPMeasurement.Entities.Position", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Positons");

                    b.HasData(
                        new
                        {
                            ID = "1",
                            Name = "Standing"
                        },
                        new
                        {
                            ID = "2",
                            Name = "Sitting"
                        },
                        new
                        {
                            ID = "3",
                            Name = "Lying down"
                        });
                });

            modelBuilder.Entity("BPMeasurement.Entities.BloodPressure", b =>
                {
                    b.HasOne("BPMeasurement.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
